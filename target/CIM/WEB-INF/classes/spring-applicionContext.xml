<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.2.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    <!--start-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- stop-->
    <!--SqlSessionFactoryBean start-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="team.ruike.cim.pojo"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:team/ruike/cim/dao/**/*.xml</value>
            </list>
        </property>
    </bean>
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="tx" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="ser" expression="execution(* team.ruike.cim.service.*.*(..))"/>
        <aop:advisor advice-ref="tx" pointcut-ref="ser"/>
    </aop:config>
    <bean id="aaa" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="team.ruike.cim.dao"/>
    </bean>
    <task:annotation-driven/>
    <context:component-scan base-package="team.ruike.cim.service.impl"/>
    <context:component-scan base-package="team.ruike.cim.pojo"/>
    <context:component-scan base-package="team.ruike.cim.util"/>
    <context:component-scan base-package="team.ruike.cim.websocket"/>
    <!-- websocket处理类 -->
    <bean id="myHandler" class="team.ruike.cim.websocket.WebSocket"/>

    <!-- 握手接口/拦截器 -->
    <bean id="myInterceptor" class="team.ruike.cim.websocket.Handshake"/>

    <websocket:handlers >
        <websocket:mapping path="/websocket.cl" handler="myHandler"/>
        <websocket:handshake-interceptors>
            <ref bean="myInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

    <!--  注册 sockJS -->
    <websocket:handlers>
        <websocket:mapping path="/sockjs/websocket.cl" handler="myHandler"/>
        <websocket:handshake-interceptors>
            <ref bean="myInterceptor"/>
        </websocket:handshake-interceptors>
        <websocket:sockjs />
    </websocket:handlers>
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!--将日志类注入到bean中。-->
    <bean id="logAspect" class="team.ruike.cim.util.ArchivesLogAspect"/>
    <aop:config>
        <!--调用日志类-->
        <aop:aspect id="LogAspect" ref="logAspect">
            <!--配置在controller包下所有的类在调用之前都会被拦截-->
            <aop:pointcut id="log" expression="execution(* team.ruike.cim.service.*.addRole(..))"/>
            <!-- 方法前触发 --><aop:before pointcut-ref="log" method="before"/>
            <!-- 方法后触发 --><aop:after pointcut-ref="log" method="after"/>
            <!-- 环绕触发  <aop:around pointcut-ref="log" method="around"/>  -->
        </aop:aspect>
    </aop:config>
</beans>